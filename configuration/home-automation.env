#############################################################
#
# ENVIRONMENT FILE
#
#############################################################
SUCCESS=0
FAILURE=1
TRUE=1
FALSE=0

f__echo_err () {
    >&2 echo "$(tput setaf 1) - ERROR - ${1}$(tput sgr0)"
}
f__echo_ok () {
    echo "$(tput setaf 2) - OK - ${1}$(tput sgr0)"
}
f__echo_warn () {
    echo "$(tput setaf 3) - WARN - ${1}$(tput sgr0)"
}
f__echo () {
    echo "$(tput sgr0)${1}"
}

RC=${SUCCESS}
SRC_CONFIG_DIR=configuration

HOST_IP_LIST=""
if [[ -x "$(command -v hostname 2>/dev/null)" ]]
then
    HOST_IP_LIST=$(hostname -i | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b")
fi

if [[ -z "${DOCKER_TZ}" ]]
then
    DOCKER_TZ="$(timedatectl status | grep "zone" | sed -re 's/^[ ]*Time zone: (.+)( \(.+)$/\1/g')"
fi

DOCKER_COMPOSE_FILE=home-automation.yaml

PROJECT_PATH=${PROJECT_PERSISTENT_STORAGE}/${PROJECT_NAME}

export HOME_ASSISTANT_DIR=${PROJECT_PATH}/homeassistant
export MQTT_DIR=${PROJECT_PATH}/mqtt
export ZIGBEE2MQTT_DIR=${PROJECT_PATH}/zigbee2mqtt

export DOCKER_TZ HA_PORT MQTT_PORT MQTT_PASSWORD MQTT_USERNAME ZB_DEVICE_PATH
export PROJECT_NAME PROJECT_PATH PROJECT_PERSISTENT_STORAGE
export HOST_IP_LIST

#
# Check for binaries
#
if [[ ! -x "$(command -v docker 2>/dev/null)" ]]
then
    f__echo_err "'docker' binary not found or not in the PATH"
    f__echo_err "Make sure docker-ce engine is installed and working"
    f__echo_err "See: https://docs.docker.com/install"
    exit ${FAILURE}
fi

if [[ -x "$(command -v docker-compose 2>/dev/null)" ]]
then
    DOCKER_COMPOSE_BIN=$(command -v docker-compose)
else
    f__echo_err "'docker-compose' binary not found or not in the PATH"
    f__echo_err "See: https://github.com/docker/compose/releases"
    exit ${FAILURE}
fi
